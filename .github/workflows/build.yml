name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  VULKAN_SDK: C:\VulkanSDK

jobs:
  windows-build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        preset: [vs2022, vs2022-vcpkg]
        build_type: [Debug, Release]
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Cross, Glslang
        vulkan-use-cache: true
    
    - name: Configure CMake
      run: cmake --preset ${{ matrix.preset }}
    
    - name: Build
      run: cmake --build --preset ${{ matrix.preset }}-${{ matrix.build_type }} --parallel
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.preset }}-${{ matrix.build_type }}
        path: out/build/${{ matrix.preset }}/bin/${{ matrix.build_type }}/
    
    - name: Test Vulkan Initialization
      run: |
        cd out/build/${{ matrix.preset }}/bin/${{ matrix.build_type }}/
        ./luster_sandbox.exe --test-init || exit 0

  vcpkg-build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 'latest'
    
    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Cross, Glslang
    
    - name: Configure with vcpkg
      run: cmake --preset vs2022-vcpkg
    
    - name: Build with vcpkg
      run: cmake --build --preset vs2022-vcpkg-Release --parallel